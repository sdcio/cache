// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: cache.proto

// import "google/protobuf/any.proto";

package cachepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InstanceDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheInstanceName string `protobuf:"bytes,1,opt,name=cache_instance_name,json=cacheInstanceName,proto3" json:"cache_instance_name,omitempty"`
}

func (x *InstanceDeleteRequest) Reset() {
	*x = InstanceDeleteRequest{}
	mi := &file_cache_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceDeleteRequest) ProtoMessage() {}

func (x *InstanceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceDeleteRequest.ProtoReflect.Descriptor instead.
func (*InstanceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{0}
}

func (x *InstanceDeleteRequest) GetCacheInstanceName() string {
	if x != nil {
		return x.CacheInstanceName
	}
	return ""
}

type InstanceDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InstanceDeleteResponse) Reset() {
	*x = InstanceDeleteResponse{}
	mi := &file_cache_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceDeleteResponse) ProtoMessage() {}

func (x *InstanceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceDeleteResponse.ProtoReflect.Descriptor instead.
func (*InstanceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{1}
}

type InstanceIntentDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheInstanceName string `protobuf:"bytes,1,opt,name=cache_instance_name,json=cacheInstanceName,proto3" json:"cache_instance_name,omitempty"`
	IntentName        string `protobuf:"bytes,2,opt,name=intent_name,json=intentName,proto3" json:"intent_name,omitempty"`
	IgnoreNonExisting bool   `protobuf:"varint,3,opt,name=IgnoreNonExisting,proto3" json:"IgnoreNonExisting,omitempty"`
}

func (x *InstanceIntentDeleteRequest) Reset() {
	*x = InstanceIntentDeleteRequest{}
	mi := &file_cache_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceIntentDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceIntentDeleteRequest) ProtoMessage() {}

func (x *InstanceIntentDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceIntentDeleteRequest.ProtoReflect.Descriptor instead.
func (*InstanceIntentDeleteRequest) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{2}
}

func (x *InstanceIntentDeleteRequest) GetCacheInstanceName() string {
	if x != nil {
		return x.CacheInstanceName
	}
	return ""
}

func (x *InstanceIntentDeleteRequest) GetIntentName() string {
	if x != nil {
		return x.IntentName
	}
	return ""
}

func (x *InstanceIntentDeleteRequest) GetIgnoreNonExisting() bool {
	if x != nil {
		return x.IgnoreNonExisting
	}
	return false
}

type InstanceIntentDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InstanceIntentDeleteResponse) Reset() {
	*x = InstanceIntentDeleteResponse{}
	mi := &file_cache_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceIntentDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceIntentDeleteResponse) ProtoMessage() {}

func (x *InstanceIntentDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceIntentDeleteResponse.ProtoReflect.Descriptor instead.
func (*InstanceIntentDeleteResponse) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{3}
}

type InstanceCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheInstanceName string `protobuf:"bytes,1,opt,name=cache_instance_name,json=cacheInstanceName,proto3" json:"cache_instance_name,omitempty"`
}

func (x *InstanceCreateRequest) Reset() {
	*x = InstanceCreateRequest{}
	mi := &file_cache_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceCreateRequest) ProtoMessage() {}

func (x *InstanceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceCreateRequest.ProtoReflect.Descriptor instead.
func (*InstanceCreateRequest) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{4}
}

func (x *InstanceCreateRequest) GetCacheInstanceName() string {
	if x != nil {
		return x.CacheInstanceName
	}
	return ""
}

type InstanceCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InstanceCreateResponse) Reset() {
	*x = InstanceCreateResponse{}
	mi := &file_cache_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceCreateResponse) ProtoMessage() {}

func (x *InstanceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceCreateResponse.ProtoReflect.Descriptor instead.
func (*InstanceCreateResponse) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{5}
}

type InstancesListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InstancesListRequest) Reset() {
	*x = InstancesListRequest{}
	mi := &file_cache_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstancesListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstancesListRequest) ProtoMessage() {}

func (x *InstancesListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstancesListRequest.ProtoReflect.Descriptor instead.
func (*InstancesListRequest) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{6}
}

type InstancesListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheInstances []string `protobuf:"bytes,1,rep,name=cache_instances,json=cacheInstances,proto3" json:"cache_instances,omitempty"`
}

func (x *InstancesListResponse) Reset() {
	*x = InstancesListResponse{}
	mi := &file_cache_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstancesListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstancesListResponse) ProtoMessage() {}

func (x *InstancesListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstancesListResponse.ProtoReflect.Descriptor instead.
func (*InstancesListResponse) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{7}
}

func (x *InstancesListResponse) GetCacheInstances() []string {
	if x != nil {
		return x.CacheInstances
	}
	return nil
}

type InstanceIntentsListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheInstanceName string `protobuf:"bytes,1,opt,name=cache_instance_name,json=cacheInstanceName,proto3" json:"cache_instance_name,omitempty"`
}

func (x *InstanceIntentsListRequest) Reset() {
	*x = InstanceIntentsListRequest{}
	mi := &file_cache_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceIntentsListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceIntentsListRequest) ProtoMessage() {}

func (x *InstanceIntentsListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceIntentsListRequest.ProtoReflect.Descriptor instead.
func (*InstanceIntentsListRequest) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{8}
}

func (x *InstanceIntentsListRequest) GetCacheInstanceName() string {
	if x != nil {
		return x.CacheInstanceName
	}
	return ""
}

type InstanceIntentsListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Intents []string `protobuf:"bytes,1,rep,name=intents,proto3" json:"intents,omitempty"`
}

func (x *InstanceIntentsListResponse) Reset() {
	*x = InstanceIntentsListResponse{}
	mi := &file_cache_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceIntentsListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceIntentsListResponse) ProtoMessage() {}

func (x *InstanceIntentsListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceIntentsListResponse.ProtoReflect.Descriptor instead.
func (*InstanceIntentsListResponse) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{9}
}

func (x *InstanceIntentsListResponse) GetIntents() []string {
	if x != nil {
		return x.Intents
	}
	return nil
}

type InstanceIntentGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheInstanceName string `protobuf:"bytes,1,opt,name=cache_instance_name,json=cacheInstanceName,proto3" json:"cache_instance_name,omitempty"`
	IntentName        string `protobuf:"bytes,2,opt,name=intent_name,json=intentName,proto3" json:"intent_name,omitempty"`
}

func (x *InstanceIntentGetRequest) Reset() {
	*x = InstanceIntentGetRequest{}
	mi := &file_cache_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceIntentGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceIntentGetRequest) ProtoMessage() {}

func (x *InstanceIntentGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceIntentGetRequest.ProtoReflect.Descriptor instead.
func (*InstanceIntentGetRequest) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{10}
}

func (x *InstanceIntentGetRequest) GetCacheInstanceName() string {
	if x != nil {
		return x.CacheInstanceName
	}
	return ""
}

func (x *InstanceIntentGetRequest) GetIntentName() string {
	if x != nil {
		return x.IntentName
	}
	return ""
}

type InstanceIntentGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntentName string `protobuf:"bytes,1,opt,name=intent_name,json=intentName,proto3" json:"intent_name,omitempty"`
	Intent     []byte `protobuf:"bytes,2,opt,name=intent,proto3" json:"intent,omitempty"`
}

func (x *InstanceIntentGetResponse) Reset() {
	*x = InstanceIntentGetResponse{}
	mi := &file_cache_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceIntentGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceIntentGetResponse) ProtoMessage() {}

func (x *InstanceIntentGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceIntentGetResponse.ProtoReflect.Descriptor instead.
func (*InstanceIntentGetResponse) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{11}
}

func (x *InstanceIntentGetResponse) GetIntentName() string {
	if x != nil {
		return x.IntentName
	}
	return ""
}

func (x *InstanceIntentGetResponse) GetIntent() []byte {
	if x != nil {
		return x.Intent
	}
	return nil
}

type InstanceIntentExistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheInstanceName string `protobuf:"bytes,1,opt,name=cache_instance_name,json=cacheInstanceName,proto3" json:"cache_instance_name,omitempty"`
	IntentName        string `protobuf:"bytes,2,opt,name=intent_name,json=intentName,proto3" json:"intent_name,omitempty"`
}

func (x *InstanceIntentExistsRequest) Reset() {
	*x = InstanceIntentExistsRequest{}
	mi := &file_cache_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceIntentExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceIntentExistsRequest) ProtoMessage() {}

func (x *InstanceIntentExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceIntentExistsRequest.ProtoReflect.Descriptor instead.
func (*InstanceIntentExistsRequest) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{12}
}

func (x *InstanceIntentExistsRequest) GetCacheInstanceName() string {
	if x != nil {
		return x.CacheInstanceName
	}
	return ""
}

func (x *InstanceIntentExistsRequest) GetIntentName() string {
	if x != nil {
		return x.IntentName
	}
	return ""
}

type InstanceIntentExistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *InstanceIntentExistsResponse) Reset() {
	*x = InstanceIntentExistsResponse{}
	mi := &file_cache_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceIntentExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceIntentExistsResponse) ProtoMessage() {}

func (x *InstanceIntentExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceIntentExistsResponse.ProtoReflect.Descriptor instead.
func (*InstanceIntentExistsResponse) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{13}
}

func (x *InstanceIntentExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type InstanceIntentModifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheInstanceName string `protobuf:"bytes,1,opt,name=cache_instance_name,json=cacheInstanceName,proto3" json:"cache_instance_name,omitempty"`
	IntentName        string `protobuf:"bytes,2,opt,name=intent_name,json=intentName,proto3" json:"intent_name,omitempty"`
	Intent            []byte `protobuf:"bytes,3,opt,name=intent,proto3" json:"intent,omitempty"`
}

func (x *InstanceIntentModifyRequest) Reset() {
	*x = InstanceIntentModifyRequest{}
	mi := &file_cache_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceIntentModifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceIntentModifyRequest) ProtoMessage() {}

func (x *InstanceIntentModifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceIntentModifyRequest.ProtoReflect.Descriptor instead.
func (*InstanceIntentModifyRequest) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{14}
}

func (x *InstanceIntentModifyRequest) GetCacheInstanceName() string {
	if x != nil {
		return x.CacheInstanceName
	}
	return ""
}

func (x *InstanceIntentModifyRequest) GetIntentName() string {
	if x != nil {
		return x.IntentName
	}
	return ""
}

func (x *InstanceIntentModifyRequest) GetIntent() []byte {
	if x != nil {
		return x.Intent
	}
	return nil
}

type InstanceIntentModifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InstanceIntentModifyResponse) Reset() {
	*x = InstanceIntentModifyResponse{}
	mi := &file_cache_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceIntentModifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceIntentModifyResponse) ProtoMessage() {}

func (x *InstanceIntentModifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceIntentModifyResponse.ProtoReflect.Descriptor instead.
func (*InstanceIntentModifyResponse) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{15}
}

type InstanceIntentGetAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheInstanceName string   `protobuf:"bytes,1,opt,name=cache_instance_name,json=cacheInstanceName,proto3" json:"cache_instance_name,omitempty"`
	ExcludeIntents    []string `protobuf:"bytes,2,rep,name=exclude_intents,json=excludeIntents,proto3" json:"exclude_intents,omitempty"`
}

func (x *InstanceIntentGetAllRequest) Reset() {
	*x = InstanceIntentGetAllRequest{}
	mi := &file_cache_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceIntentGetAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceIntentGetAllRequest) ProtoMessage() {}

func (x *InstanceIntentGetAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cache_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceIntentGetAllRequest.ProtoReflect.Descriptor instead.
func (*InstanceIntentGetAllRequest) Descriptor() ([]byte, []int) {
	return file_cache_proto_rawDescGZIP(), []int{16}
}

func (x *InstanceIntentGetAllRequest) GetCacheInstanceName() string {
	if x != nil {
		return x.CacheInstanceName
	}
	return ""
}

func (x *InstanceIntentGetAllRequest) GetExcludeIntents() []string {
	if x != nil {
		return x.ExcludeIntents
	}
	return nil
}

var File_cache_proto protoreflect.FileDescriptor

var file_cache_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x47, 0x0a, 0x15, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x63, 0x61, 0x63, 0x68, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9c, 0x01,
	0x0a, 0x1b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a,
	0x13, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4e, 0x6f, 0x6e, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x4e, 0x6f, 0x6e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x1e, 0x0a, 0x1c,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x0a, 0x15,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x63, 0x61, 0x63, 0x68, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x16, 0x0a, 0x14, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x40, 0x0a, 0x15, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x1a, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x61, 0x63, 0x68, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x37, 0x0a, 0x1b, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x6b, 0x0a, 0x18, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x54, 0x0a,
	0x19, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0x6e, 0x0a, 0x1b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x63, 0x61, 0x63, 0x68, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x1c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x1b,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x61, 0x63, 0x68, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0x1e, 0x0a, 0x1c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x76, 0x0a, 0x1b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x63, 0x61, 0x63, 0x68, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x97, 0x07, 0x0a,
	0x05, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x59, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x56, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x21, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x13, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x2e, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b,
	0x0a, 0x15, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x28, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x62, 0x0a, 0x11, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74,
	0x12, 0x25, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6b, 0x0a, 0x14, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x28, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x14,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x12, 0x28, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x14, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x28, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x3b, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cache_proto_rawDescOnce sync.Once
	file_cache_proto_rawDescData = file_cache_proto_rawDesc
)

func file_cache_proto_rawDescGZIP() []byte {
	file_cache_proto_rawDescOnce.Do(func() {
		file_cache_proto_rawDescData = protoimpl.X.CompressGZIP(file_cache_proto_rawDescData)
	})
	return file_cache_proto_rawDescData
}

var file_cache_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_cache_proto_goTypes = []any{
	(*InstanceDeleteRequest)(nil),        // 0: cache.proto.InstanceDeleteRequest
	(*InstanceDeleteResponse)(nil),       // 1: cache.proto.InstanceDeleteResponse
	(*InstanceIntentDeleteRequest)(nil),  // 2: cache.proto.InstanceIntentDeleteRequest
	(*InstanceIntentDeleteResponse)(nil), // 3: cache.proto.InstanceIntentDeleteResponse
	(*InstanceCreateRequest)(nil),        // 4: cache.proto.InstanceCreateRequest
	(*InstanceCreateResponse)(nil),       // 5: cache.proto.InstanceCreateResponse
	(*InstancesListRequest)(nil),         // 6: cache.proto.InstancesListRequest
	(*InstancesListResponse)(nil),        // 7: cache.proto.InstancesListResponse
	(*InstanceIntentsListRequest)(nil),   // 8: cache.proto.InstanceIntentsListRequest
	(*InstanceIntentsListResponse)(nil),  // 9: cache.proto.InstanceIntentsListResponse
	(*InstanceIntentGetRequest)(nil),     // 10: cache.proto.InstanceIntentGetRequest
	(*InstanceIntentGetResponse)(nil),    // 11: cache.proto.InstanceIntentGetResponse
	(*InstanceIntentExistsRequest)(nil),  // 12: cache.proto.InstanceIntentExistsRequest
	(*InstanceIntentExistsResponse)(nil), // 13: cache.proto.InstanceIntentExistsResponse
	(*InstanceIntentModifyRequest)(nil),  // 14: cache.proto.InstanceIntentModifyRequest
	(*InstanceIntentModifyResponse)(nil), // 15: cache.proto.InstanceIntentModifyResponse
	(*InstanceIntentGetAllRequest)(nil),  // 16: cache.proto.InstanceIntentGetAllRequest
}
var file_cache_proto_depIdxs = []int32{
	4,  // 0: cache.proto.Cache.InstanceCreate:input_type -> cache.proto.InstanceCreateRequest
	6,  // 1: cache.proto.Cache.InstancesList:input_type -> cache.proto.InstancesListRequest
	0,  // 2: cache.proto.Cache.InstanceDelete:input_type -> cache.proto.InstanceDeleteRequest
	8,  // 3: cache.proto.Cache.InstanceIntentsList:input_type -> cache.proto.InstanceIntentsListRequest
	16, // 4: cache.proto.Cache.InstanceIntentsGetAll:input_type -> cache.proto.InstanceIntentGetAllRequest
	10, // 5: cache.proto.Cache.InstanceIntentGet:input_type -> cache.proto.InstanceIntentGetRequest
	12, // 6: cache.proto.Cache.InstanceIntentExists:input_type -> cache.proto.InstanceIntentExistsRequest
	14, // 7: cache.proto.Cache.InstanceIntentModify:input_type -> cache.proto.InstanceIntentModifyRequest
	2,  // 8: cache.proto.Cache.InstanceIntentDelete:input_type -> cache.proto.InstanceIntentDeleteRequest
	5,  // 9: cache.proto.Cache.InstanceCreate:output_type -> cache.proto.InstanceCreateResponse
	7,  // 10: cache.proto.Cache.InstancesList:output_type -> cache.proto.InstancesListResponse
	1,  // 11: cache.proto.Cache.InstanceDelete:output_type -> cache.proto.InstanceDeleteResponse
	9,  // 12: cache.proto.Cache.InstanceIntentsList:output_type -> cache.proto.InstanceIntentsListResponse
	11, // 13: cache.proto.Cache.InstanceIntentsGetAll:output_type -> cache.proto.InstanceIntentGetResponse
	11, // 14: cache.proto.Cache.InstanceIntentGet:output_type -> cache.proto.InstanceIntentGetResponse
	13, // 15: cache.proto.Cache.InstanceIntentExists:output_type -> cache.proto.InstanceIntentExistsResponse
	15, // 16: cache.proto.Cache.InstanceIntentModify:output_type -> cache.proto.InstanceIntentModifyResponse
	3,  // 17: cache.proto.Cache.InstanceIntentDelete:output_type -> cache.proto.InstanceIntentDeleteResponse
	9,  // [9:18] is the sub-list for method output_type
	0,  // [0:9] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_cache_proto_init() }
func file_cache_proto_init() {
	if File_cache_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cache_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cache_proto_goTypes,
		DependencyIndexes: file_cache_proto_depIdxs,
		MessageInfos:      file_cache_proto_msgTypes,
	}.Build()
	File_cache_proto = out.File
	file_cache_proto_rawDesc = nil
	file_cache_proto_goTypes = nil
	file_cache_proto_depIdxs = nil
}
